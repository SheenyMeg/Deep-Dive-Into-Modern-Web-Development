{"version":3,"sources":["services/blogs.js","services/login.js","services/users.js","components/Blog.js","components/Notify.js","components/LoginForm.js","components/Togglable.js","components/BlogForm.js","App.js","index.js"],"names":["token","getAll","a","axios","get","request","then","response","data","setToken","newToken","create","newObject","config","headers","Authorization","post","remove","id","delete","update","updateObject","put","login","credentials","Blog","blog","handleRemove","handleAddLikes","useState","showDetail","setShowDetail","handleShow","showMore","display","style","paddingTop","paddingBottom","paddingLeft","border","borderWidth","marginBottom","className","title","onClick","author","url","flexDirection","likes","marginLeft","Notify","notify","hiddenNotifyStyle","status","show","color","background","fontSize","borderStyle","borderRadius","padding","marginbottom","message","LoginForm","loginObj","username","password","loginInfo","setLoginInfo","onSubmit","event","preventDefault","autoComplete","type","value","name","onChange","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","BlogForm","createBlog","blogInfo","setBlogInfo","App","blogFormRef","useRef","loginFormRef","users","setUsers","loginUser","setLoginUser","sortBlogs","setSortBlog","setName","setMessage","useEffect","userService","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogService","loggedSortBlogJSON","sortBlog","length","sort","b","setItem","stringify","loggedNameJSON","nameStr","loginSubmit","loginObject","loginService","loginedUser","userBlog","find","user","blogs","sortLikes","current","setTimeout","addBlog","blogObject","newBlog","concat","loggedBlogJSONArr","newUserBlog","deleteObject","confirm","deleteBlog","filter","changingBlog","changeObject","changeBlog","map","clear","location","reload","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bc9c6a7.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const request = await axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const request = await axios.post(baseUrl, newObject, config)\r\n  return request.data\r\n}\r\n\r\nconst remove = async id => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.data\r\n}\r\n\r\nconst update = async (id, updateObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const request = await axios.put(`${ baseUrl }/${id}`, updateObject, config)\r\n  return request.data\r\n}\r\n\r\nexport default { getAll, token, setToken, create, remove, update }","import axios from 'axios'\r\nconst baseUrl = '/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst baseUrl = '/users'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\n// const update = (id, newObject) => {\r\n//   const request = axios.put(`${ baseUrl }/${id}`, newObject)\r\n//   return request.then(response => response.data)\r\n// }\r\n\r\nexport default { getAll, token, setToken, create }","import React, { useState } from 'react'\r\n\r\nconst Blog = ({ blog, handleRemove, handleAddLikes }) => {\r\n  const [showDetail, setShowDetail] = useState(false)\r\n\r\n  const handleShow =  () => {\r\n    setShowDetail(!showDetail)\r\n  }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const likeStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  }\r\n  const likeButton = {\r\n    marginLeft: 10\r\n  }\r\n  const showMore = { display: showDetail ? '' : 'none' }\r\n\r\n  return (\r\n    <div style={ blogStyle } className='blog'>\r\n      <div>\r\n        <b>Title:</b> {blog.title}\r\n        {\r\n          showDetail?\r\n            <button id='hide' onClick={handleShow}>hide</button> :\r\n            <button id='view' className='view-button' onClick={handleShow}>view</button>\r\n        }\r\n      </div>\r\n      <div style={ showMore } className='testBlog'>\r\n        <div> <b>Author:</b> {blog.author}  </div>\r\n        <div className='testUrl'> <b>Url:</b> {blog.url}  </div>\r\n        <div style={ likeStyle }>\r\n          <div className='testLike'><b>Likes:</b> {blog.likes}</div>\r\n          <button id='like' onClick={ () => handleAddLikes(blog.id) } style={ likeButton }>like</button>\r\n        </div>\r\n        <button id='remove' onClick={ () => handleRemove(blog.id) }>remove</button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst Notify = ({ notify }) => {\r\n  const successNotifyStyle = {\r\n    display: 'block',\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: '15px',\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginbottom: 10\r\n  }\r\n  const errorNotifyStyle = {\r\n    display: 'block',\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: '15px',\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginbottom: 10\r\n  }\r\n  const hiddenNotifyStyle = {\r\n    display: 'none'\r\n  }\r\n\r\n  if (notify.status === 'success') {\r\n    return (\r\n      <div id='success' style={notify.show ? successNotifyStyle : hiddenNotifyStyle}>\r\n        {notify.message}\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div id='error' style={notify.show ? errorNotifyStyle : hiddenNotifyStyle}>\r\n      {notify.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notify\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({ loginObj }) => {\r\n  LoginForm.propTypes = {\r\n    loginObj: PropTypes.func.isRequired\r\n  }\r\n  const [loginInfo, setLoginInfo] = useState(\r\n    {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  )\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setLoginInfo({\r\n      ...loginInfo,\r\n      username: event.target.value\r\n    })\r\n  }\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setLoginInfo({\r\n      ...loginInfo,\r\n      password: event.target.value\r\n    })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    loginObj({\r\n      username: loginInfo.username,\r\n      password: loginInfo.password\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div id='loginForm'>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            autoComplete=\"true\"\r\n            type=\"text\"\r\n            value={loginInfo.username}\r\n            name=\"Username\"\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            autoComplete=\"true\"\r\n            type=\"password\"\r\n            value={loginInfo.password}\r\n            name=\"Password\"\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" id='login-button'>login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useState, useImperativeHandle  } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef ( (props, ref) => {\r\n  Togglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  }\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible} className='loginButton'>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  BlogForm.propTypes = {\r\n    createBlog: PropTypes.func.isRequired\r\n  }\r\n\r\n  const [blogInfo, setBlogInfo] = useState(\r\n    {\r\n      title: '',\r\n      author: '',\r\n      url: ''\r\n    }\r\n  )\r\n\r\n  const handleTitleChange = (event) => {\r\n    setBlogInfo({\r\n      ...blogInfo,\r\n      title: event.target.value\r\n    })\r\n  }\r\n\r\n  const handleAuthorChange = (event) => {\r\n    setBlogInfo({\r\n      ...blogInfo,\r\n      author: event.target.value\r\n    })\r\n  }\r\n\r\n  const handleUrlChange = (event) => {\r\n    setBlogInfo({\r\n      ...blogInfo,\r\n      url: event.target.value\r\n    })\r\n  }\r\n\r\n  const handleAddBlog = (event) => {\r\n    event.preventDefault()\r\n\r\n    createBlog({\r\n      title: blogInfo.title,\r\n      author: blogInfo.author,\r\n      url: blogInfo.url\r\n    })\r\n\r\n    setBlogInfo({\r\n      title: '',\r\n      author: '',\r\n      url: ''\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"blogFormDiv\">\r\n      <h2 id=\"create-new\">Create new</h2>\r\n      <form onSubmit={handleAddBlog}>\r\n        <div>\r\n            title:\r\n          <input\r\n            id='title'\r\n            autoComplete=\"true\"\r\n            type=\"text\"\r\n            value={blogInfo.title}\r\n            name=\"title\"\r\n            onChange={handleTitleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n            author:\r\n          <input\r\n            id='author'\r\n            autoComplete=\"true\"\r\n            type=\"text\"\r\n            value={blogInfo.author}\r\n            name=\"author\"\r\n            onChange={handleAuthorChange}\r\n          />\r\n        </div>\r\n        <div>\r\n            url:\r\n          <input\r\n            id='url'\r\n            autoComplete=\"true\"\r\n            type=\"text\"\r\n            value={blogInfo.url}\r\n            name=\"url\"\r\n            onChange={handleUrlChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" id='create-blog'>create</button>\r\n      </form>\r\n    </div>\r\n  )}\r\n\r\nexport default BlogForm\r\n","import React, { useState, useEffect, useRef  } from 'react'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport userService from './services/users'\r\nimport Blog from './components/Blog'\r\nimport Notify from './components/Notify'\r\nimport LoginForm from './components/LoginForm'\r\nimport Togglable from './components/Togglable'\r\nimport BlogForm from './components/BlogForm'\r\n\r\nconst App = () => {\r\n  const blogFormRef = useRef()\r\n  const loginFormRef = useRef()\r\n\r\n  const [users, setUsers] = useState([])\r\n\r\n  const [loginUser, setLoginUser] = useState(null)\r\n  const [sortBlogs, setSortBlog] = useState([])\r\n\r\n  const [name, setName] = useState('')\r\n  const [notify, setMessage] = useState(\r\n    {\r\n      status: '',\r\n      message: '',\r\n      show: false\r\n    }\r\n  )\r\n\r\n  useEffect(() => {\r\n    userService.getAll().then(users =>\r\n      setUsers( users )\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const loginUser = JSON.parse(loggedUserJSON)\r\n      setLoginUser(loginUser)\r\n      blogService.setToken(loginUser.token)\r\n    }\r\n\r\n    const loggedSortBlogJSON = window.localStorage.getItem('loggedSortBlogs')\r\n    if (loggedSortBlogJSON) {\r\n      const sortBlog = JSON.parse(loggedSortBlogJSON)\r\n\r\n      if (sortBlog.length > 0) {\r\n        const sortLikes = (a,b) => {\r\n          return a.likes < b.likes ? 1 : -1\r\n        }\r\n        const sort = sortBlog.sort(sortLikes)\r\n\r\n        setSortBlog(sort)\r\n\r\n        window.localStorage.setItem('loggedSortBlogs', JSON.stringify(sort))\r\n\r\n      } else {\r\n        window.localStorage.setItem('loggedSortBlogs', JSON.stringify([]))\r\n      }\r\n    }\r\n\r\n    const loggedNameJSON = window.localStorage.getItem('loggedName')\r\n    if (loggedNameJSON) {\r\n      const nameStr = JSON.parse(loggedNameJSON)\r\n      setName(nameStr)\r\n    }\r\n  }, [])\r\n\r\n  const loginSubmit = async (loginObject) => {\r\n    try {\r\n      const loginedUser = await loginService.login(loginObject)\r\n      if (loginedUser) {\r\n\r\n        setLoginUser(loginedUser)\r\n        setName(loginedUser.username)\r\n        blogService.setToken(loginedUser.token)\r\n\r\n        window.localStorage.setItem(\r\n          'loggedName', JSON.stringify(loginedUser.username)\r\n        )\r\n        window.localStorage.setItem(\r\n          'loggedBlogappUser', JSON.stringify(loginedUser)\r\n        )\r\n        const userBlog = users.find(user => user.username === loginedUser.username ).blogs\r\n\r\n        if (userBlog.length > 0) {\r\n          const sortLikes = (a,b) => {\r\n            return a.likes < b.likes ? 1 : -1\r\n          }\r\n          const sort = userBlog.sort(sortLikes)\r\n          setSortBlog(sort)\r\n\r\n          window.localStorage.setItem(\r\n            'loggedSortBlogs', JSON.stringify(sort)\r\n          )\r\n        } else {\r\n          window.localStorage.setItem(\r\n            'loggedSortBlogs', JSON.stringify([])\r\n          )\r\n        }\r\n\r\n        if (loginUser) {\r\n          loginFormRef.current.toggleVisibility()\r\n        }\r\n      }\r\n    } catch(e) {\r\n      setMessage({\r\n        status: 'fail',\r\n        message: 'Wrong username or password',\r\n        show: true\r\n      })\r\n      setTimeout(() => {\r\n        setMessage({\r\n          status: '',\r\n          message: '',\r\n          show: false\r\n        })\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    const isLogout = window.confirm('Are you sure to log out?')\r\n    if (isLogout) {\r\n      window.localStorage.clear()\r\n      window.location.reload(false)\r\n    }\r\n  }\r\n\r\n  const addBlog = async (blogObject) => {\r\n    try {\r\n      const newBlog = await blogService.create(blogObject)\r\n      if (newBlog) {\r\n        setSortBlog( sortBlogs.concat(newBlog) )\r\n\r\n        blogFormRef.current.toggleVisibility()\r\n\r\n        const loggedBlogJSONArr = await window.localStorage.getItem('loggedSortBlogs')\r\n        if (loggedBlogJSONArr) {\r\n          const userBlog = JSON.parse(loggedBlogJSONArr)\r\n          const newUserBlog = userBlog.concat(newBlog)\r\n          window.localStorage.setItem('loggedSortBlogs', JSON.stringify(newUserBlog))\r\n        }\r\n\r\n        setMessage({\r\n          status: 'success',\r\n          message: `A new blog ${blogObject.title} created by ${loginUser.username}`,\r\n          show: true\r\n        })\r\n        setTimeout(() => {\r\n          setMessage({\r\n            status: '',\r\n            message: '',\r\n            show: false\r\n          })\r\n        }, 5000)\r\n      }\r\n    } catch (e) {\r\n      setMessage({\r\n        status: 'fail',\r\n        message: `Invaild new blog created by ${loginUser.username}`,\r\n        show: true\r\n      })\r\n      setTimeout(() => {\r\n        setMessage({\r\n          status: '',\r\n          message: '',\r\n          show: false\r\n        })\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleRemove = async (id) => {\r\n    const deleteObject = await sortBlogs.find(blog => blog.id === id)\r\n    const isRemove = window.confirm(`Remove ${deleteObject.title} by ${name} ?`)\r\n    if (isRemove) {\r\n      deleteBlog(id, deleteObject)\r\n    }\r\n  }\r\n  const deleteBlog = async (id, deleteObject) => {\r\n    try {\r\n      await blogService.remove(id)\r\n\r\n      setSortBlog( sortBlogs.filter(blog => blog.id !== id) )\r\n\r\n      const loggedBlogJSONArr = window.localStorage.getItem('loggedSortBlogs')\r\n      if (loggedBlogJSONArr) {\r\n        const userBlog = JSON.parse(loggedBlogJSONArr)\r\n        const newUserBlog = userBlog.filter(blog => blog.id !== id)\r\n        window.localStorage.setItem('loggedSortBlogs', JSON.stringify(newUserBlog))\r\n      }\r\n\r\n      setMessage({\r\n        status: 'success',\r\n        message: `Success removed ${deleteObject.title} by ${loginUser.username}`,\r\n        show: true\r\n      })\r\n      setTimeout(() => {\r\n        setMessage({\r\n          status: '',\r\n          message: '',\r\n          show: false\r\n        })\r\n      }, 5000)\r\n    } catch (e) {\r\n      setMessage({\r\n        status: 'fail',\r\n        message: `Delete ${deleteObject.title} failed by ${loginUser.username}`,\r\n        show: true\r\n      })\r\n      setTimeout(() => {\r\n        setMessage({\r\n          status: '',\r\n          message: '',\r\n          show: false\r\n        })\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleAddLikes = (id) => {\r\n    const changingBlog = sortBlogs.find(blog => blog.id === id)\r\n\r\n    if (changingBlog) {\r\n      const changeObject = {\r\n        ...changingBlog,\r\n        likes: changingBlog.likes += 1\r\n      }\r\n\r\n      changeBlog(id, changeObject)\r\n    }\r\n\r\n  }\r\n  const changeBlog = async (id, changeObject) => {\r\n    try {\r\n      const update = await blogService.update(id, changeObject)\r\n      if (update) {\r\n        const loggedBlogJSONArr = window.localStorage.getItem('loggedSortBlogs')\r\n        if (loggedBlogJSONArr) {\r\n          const userBlog = JSON.parse(loggedBlogJSONArr)\r\n          const newUserBlog = userBlog.map(blog => blog.id !== id ? blog : update)\r\n          window.localStorage.setItem('loggedSortBlogs', JSON.stringify(newUserBlog))\r\n        }\r\n\r\n        setMessage({\r\n          status: 'success',\r\n          message: `like +1 for ${changeObject.title} by ${loginUser.username}`,\r\n          show: true\r\n        })\r\n        setTimeout(() => {\r\n          setMessage({\r\n            status: '',\r\n            message: '',\r\n            show: false\r\n          })\r\n        }, 5000)\r\n      }\r\n    } catch (e) {\r\n      setMessage({\r\n        status: 'fail',\r\n        message: `failed like +1 for ${changeObject.title} failed by ${loginUser.username}`,\r\n        show: true\r\n      })\r\n      setTimeout(() => {\r\n        setMessage({\r\n          status: '',\r\n          message: '',\r\n          show: false\r\n        })\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel=\"create new\" ref={blogFormRef}\r\n    >\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"log in\" ref={loginFormRef}\r\n    >\r\n      <LoginForm loginObj={loginSubmit} />\r\n    </Togglable>\r\n  )\r\n  return (\r\n    <div>\r\n      <h1>Blogs</h1>\r\n      <Notify notify={ notify } />\r\n      {\r\n        loginUser === null ?\r\n          <LoginForm loginObj={loginSubmit} />:\r\n          (\r\n            <div>\r\n              <div>\r\n                <b>{ name }</b> logged in\r\n                <button type=\"reset\" onClick={handleLogout}>logout</button>\r\n              </div>\r\n\r\n              <div>\r\n                { loginForm() }\r\n              </div>\r\n              <div>\r\n                { blogForm() }\r\n              </div>\r\n\r\n              <h2>blog lists</h2>\r\n              <div>\r\n                {sortBlogs && sortBlogs.length > 0 ?\r\n                  sortBlogs.map(blog =>\r\n                    <Blog\r\n                      key={blog.id}\r\n                      blog={blog}\r\n                      handleRemove={handleRemove}\r\n                      handleAddLikes={handleAddLikes}\r\n                    />)\r\n                  : 'Blog not yet added'\r\n                }\r\n              </div>\r\n            </div>\r\n          )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}